#include <windows.h>
#include <iostream>
#include <string>
#include <fstream>


// ??? ??????? ????? ????????? ? ????????

// ??????? ????? ??????? ?? ?????????? ?? ?????, ?? ?????? ??????????????? ??? ??'???? ? ?????
// ?????????? (0, 0) ??????????? ? ????????? ?????? ???? ?????

const int WINDOW_WIDTH = 800; // ?????? ?????
const int WINDOW_HEIGHT = 600; // ?????? ?????
const int PADDLE_WIDTH = 10; // ?????? ????????? ??????
const int PADDLE_HEIGHT = 100; // ?????? ????????? ??????
const int BALL_SIZE = 15; // ??????? ??????????? ?'???
const int WALL_WIDTH = 15; // ?????? ????????????? ??????
const int BAR_HEIGHT = 23; // ???????? ??? ???????? ????? ????? ?? ???????? ???? ???????? ????. ?????????? ??????????, ????????? ?? ???? 
const int BUTTON_WIDTH = 100; // ?????? ??????
const int BUTTON_HEIGHT = 40; // ?????? ??????

const int PADDLE_SPEED = 10; // ????????, ??? ????????? ????????? ?? ???? *???
const int BALL_SPEED = 3; // ????????, ????? ????????? ?'?? ?? ???? *???

// *??? - ?????? ???? "????", ?????? ??????????? ??? ?? g_TimerDelay ??????????
const int g_TimerDelay = 16; // ???????? ??? "??????" (???????)

const COLORREF g_BgColor = RGB(222, 231, 249); // ???????????? ????? ???? ? ??????? RGB



// HWND (Handles to a Window) - ??? ?????, ?????? ?????????? ?? ?????. ????? ?? ?????? ???? ? ? ????? ??????.
// ??????????? ?? ???, ?? ????????? ?????? ?? ???????????? ?????

// ??????? ?????????: ????? ??????? ???????, ???? ?? ????? ???? ?? ??????, ? ??????? ??????. ?? ?? ???????:
// ???? ?? ?????????? ????? ???????, ????? ??????? ????? ?????, ?? ????? ???????? ???? ????? ???? ?? ????.
// ?????????: ??? ??????? ???, ?????????????? ????? g_hWndMenu, ?? ????? ???????????? g_StartButton, g_RulesButton ?? g_ExitButton, ????? ? ???????? ????

HWND g_hWndMenu; // ????????????? ????? ???????, ? ????? ????????? ?? ? ??? 
HWND g_hWndGame;

HWND g_StartButton;
HWND g_RulesButton;
HWND g_ExitButton;


HWND g_PlusButton;
HWND g_MinusButton;

// ??? ???? ????? ? ????????? ?? ???????????? ???, ???????? ???? ? ????????????. ????? ???? ??????????? ??????, ? ?? ???????????? ?? ??????? ??, ?????????, ??????.
// ???????? ?? ????????, ?????? ????????. ??????? ?? ????? ?????.

UINT_PTR g_TimerID; // ????????????? ?????? ??? ??????. ??? ????'???????? ?? ??????????? ????? ? ?? ?????? ????????, ??? ????? ???? ?????????? ?? ??????? ? ????-???? ????? ???????? ? ???????? ????

int g_totalScore = 0; // ???????? ??????? ??????
int g_WinningScore = 3; // ???????, ?????????? ??????? ??? ????, ??? ?????????
int g_PlayerY = WINDOW_HEIGHT / 2 - PADDLE_HEIGHT / 2; // ???????????? ?????????? ??????? ????????? ?????? ?? ????? ????
int g_BallX = WINDOW_WIDTH / 2 - BALL_SIZE / 2; // ???????????? ?????????? ??????? ?'??? ?? ?????? ???? ?? ??? ?
int g_BallY = WINDOW_HEIGHT / 2 - BALL_SIZE / 2; // ???????????? ?????????? ??????? ?'??? ?? ?????? ???? ?? ??? ?
int g_BallDirX = 1; // ????????? ?????? ???????? ?'??? ?? ??? ?. ???????????? ???????? 0, ???? ?'?? ?'????? ? ????? ?????? ???? ??? ????????? ??????
int g_BallDirY = 1; // ?????????? ??? ??? ?. ????????????, ???? ?'?? ?'????? ? ?????? ??? ????? ?????? ????



// ????????????? ??????? ? ???????, ????? ???? ????????? ??????
// ---------------------------------------------------------------------------------
LRESULT CALLBACK WndProcMenu(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);
LRESULT CALLBACK WndProcGame(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam);

void CreateMenuButtons(HWND hWnd);
void UpdateGame();
void DrawGame(HDC hdc);
void DrawMenu(HDC hdc);
void MovePlayer(int direction);
void ResetBall();
void SaveResultsToFile();
// ---------------------------------------------------------------------------------




// ???? ??????? ? ?????? ????? ? ????????, ?????? ??????????? ?? ?????????
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) // ?? ????????? ?????? ?? ??????, ? ???? ?? ?? ??????, ??? ???? ? ????????????? ? ????? ?????? ????? ?? ?? ??????
{
    WNDCLASSEX wcexMenu, wcexGame; // ??? ?????????, ????? ??????? ????? ??????? ????????? ?????, ????????????? ? ?????? - lpfnWndProc.
    // ??? ???????? ??????? ??'? ???????, ????? "?????? ?????" (??????? ?????), ????? ???????????? ? ?????

    // ?? ???? ?????? ?? ???? ???? ?????????? ????, ?? ???? ????????? ? ?????, ????????? ????? ???? ????????, ???? ???? ???????????? ? ?????, ????????? ????? ?????????, ????.
    // ?? ????????? ??? ???????? ?????? ?????? ?????, ?? ????? ????????, ????? ?? ??????????

    HBRUSH hb = ::CreateSolidBrush(g_BgColor);

    wcexMenu.cbSize = sizeof(WNDCLASSEX);
    wcexMenu.style = CS_HREDRAW | CS_VREDRAW;
    wcexMenu.lpfnWndProc = WndProcMenu; // ????? ???????, ????? ???????? ????? ? ????? ????
    wcexMenu.cbClsExtra = 0;
    wcexMenu.cbWndExtra = 0;
    wcexMenu.hInstance = hInstance;
    wcexMenu.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    wcexMenu.hCursor = LoadCursor(NULL, IDC_ARROW);
    wcexMenu.hbrBackground = hb;

    wcexMenu.lpszMenuName = NULL;
    wcexMenu.lpszClassName = TEXT("MyMenuClass");
    wcexMenu.hIconSm = LoadIcon(NULL, IDI_APPLICATION);
    wcexGame.cbSize = sizeof(WNDCLASSEX);
    wcexGame.style = CS_HREDRAW | CS_VREDRAW;
    wcexGame.lpfnWndProc = WndProcGame; // ????? ???????, ????? ???????? ????? ? ????? ???
    wcexGame.cbClsExtra = 0;
    wcexGame.cbWndExtra = 0;
    wcexGame.hInstance = hInstance;
    wcexGame.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    wcexGame.hCursor = LoadCursor(NULL, IDC_ARROW);

    wcexGame.hbrBackground = hb;

    wcexGame.lpszMenuName = NULL;
    wcexGame.lpszClassName = TEXT("MyGameClass");
    wcexGame.hIconSm = LoadIcon(NULL, IDI_APPLICATION);

    if (!RegisterClassEx(&wcexMenu) || !RegisterClassEx(&wcexGame)) // ?????????, ?? ????????? ???????????????? ?????????? ? ???????? ?????????, ???? ??
    {
        MessageBox(NULL, TEXT("Call to RegisterClassEx failed!"), TEXT("Win32"), MB_OK);
        return 1;
    }

    g_hWndMenu = CreateWindow( // ????????? ???? ????? ????, ?????????? ?????? ?????????
        TEXT("MyMenuClass"),
        TEXT("Tennis"), // ????? ?????
        WS_OVERLAPPEDWINDOW, // ?????????? ?????? ????????????. ???????, ???? ??????
        CW_USEDEFAULT, CW_USEDEFAULT,
        WINDOW_WIDTH, WINDOW_HEIGHT, // ??? ??? ?? ?????????????? ???? ? ???????????? ???? ?? ?????? ? ?????? ??????????
        NULL,
        NULL,
        hInstance,
        NULL
    );

    g_hWndGame = CreateWindow( // ??? ?? ????, ?????? ??? ????? ???
        TEXT("MyGameClass"),
        TEXT("Tennis"),
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT,
        WINDOW_WIDTH, WINDOW_HEIGHT,
        NULL,
        NULL,
        hInstance,
        NULL
    );

    ShowWindow(g_hWndMenu, nCmdShow); // ???????? ?? ?????? ???????, ???????? ????????? ????? ????
    UpdateWindow(g_hWndMenu); // ????????? ????, ??? ??? ????????????? ?????????. ???? ???? ?????????? ???????, ????? ?????? ?????, ?????? ?????? ???? ?????????? ?? ??????.



    // ??? ?????? ???? ???????????????? ??? ??????? ??????????? ? ????? ?? ???????????? ?? ?? ??????? ??????? ???????????
    // -------------------------------------------
    MSG msg;
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return (int)msg.wParam;
    // -------------------------------------------
}


void CreateMenuButtons(HWND hWnd) // ??????? ??? ???????????? ?????????? ?????? ? ????? ????
{
    g_StartButton = CreateWindow( // ?? ? ??? ?????, ?????? ?? ??? ?????, ??? ?? ?????????????? CreateWindow
        TEXT("BUTTON"),
        TEXT("Start"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON, // ???????? ???????? ??????????, ????? ???? ??????
        int(WINDOW_WIDTH / 2 - BUTTON_WIDTH / 2), 200, BUTTON_WIDTH, BUTTON_HEIGHT, // ?? ?????? ????????? ???????????? ?? ???????? ???? ??????????: ??????? ?????? ?? ?, ??????? ?????? ?? ?, ?????? ? ???????? ? ??????  
        hWnd,
        (HMENU)1, // ?????? ??????
        GetModuleHandle(NULL),
        NULL
    );

    // ? ?????? ???????? ??? ??????????

    g_RulesButton = CreateWindow(
        TEXT("BUTTON"),
        TEXT("Rules"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        int(WINDOW_WIDTH / 2 - BUTTON_WIDTH / 2), 250, BUTTON_WIDTH, BUTTON_HEIGHT,
        hWnd,
        (HMENU)2,
        GetModuleHandle(NULL),
        NULL
    );

    g_ExitButton = CreateWindow(
        TEXT("BUTTON"),
        TEXT("Exit"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        int(WINDOW_WIDTH / 2 - BUTTON_WIDTH / 2), 300, BUTTON_WIDTH, BUTTON_HEIGHT,
        hWnd,
        (HMENU)3,
        GetModuleHandle(NULL),
        NULL
    );

    g_PlusButton = CreateWindow(
        TEXT("BUTTON"),
        TEXT("+"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        int(WINDOW_WIDTH / 2 - 35), WINDOW_HEIGHT - 100, 30, 30,
        hWnd,
        (HMENU)4,
        GetModuleHandle(NULL),
        NULL
    );

    g_MinusButton = CreateWindow(
        TEXT("BUTTON"),
        TEXT("-"),
        WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON,
        int(WINDOW_WIDTH / 2 + 5), WINDOW_HEIGHT - 100, 30, 30,
        hWnd,
        (HMENU)5,
        GetModuleHandle(NULL),
        NULL
    );
}

// ??????? ???????? ????? ??? ????? ????, ????????????, ???? ? ????? ???????????? ????? ????-??? ???.
LRESULT CALLBACK WndProcMenu(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) // ????????, ?????? ??? ???????? - UINT message. ?? ???? ??? ??????? ????????????? ?????, ?? ?????????
{
    switch (message) // ??? ?????????, ??? ???? ????? ?????????, ?????????????? ?????-????
    {
    case WM_CREATE: // ????? ????????? ?????
        CreateMenuButtons(hWnd); //????????????? ?????? ?????????? ??????? ???? ???????
        break;
    case WM_COMMAND: // ?????????? ??? ?????????? ??????. ??? ?????????????? ?? ???? ?????-????, ??? ????????? ??? ???? ?????? ???? ?????????
        switch (LOWORD(wParam))
        { // ????? ?????? ??? ???? ??????, ?????? ???????????? ??? ?? ?????????. ?????? ??????? CreateMenuButtons
        case 1: // ??? ?? ?????? Start
            ShowWindow(g_hWndMenu, SW_HIDE); // ?????????? ????? ????
            ShowWindow(g_hWndGame, SW_SHOWNORMAL); // ? ????????? ????? ???
            SetTimer(g_hWndGame, 1, g_TimerDelay, NULL); // ???????: ? ???????? ??? ?? ?????????? ??????, ?????? ???????????????? ??? ????, ??? ??? ? ??? ????? ???? ?????????? ???? ???.
            // ????? ??? ??????? ?? ??? ?????, ????? ???????? ? ???????? ??????? ????? ????? ???
            break;
        case 2: // ??? ?? ?????? Rules
            MessageBox(hWnd, TEXT("Game Tennis: after pressing button [Start], you have to catch a ball with a platform to bounce it off and earn points. To move the platform, use keyboard arrows UP and DOWN. You can adjust the maximum score required to win the game by pressing buttons [+] and [-]."), TEXT("Rules"), MB_OK);
            // ????????? ???????????? ??????????? ????? ? ??????? ??????
            break;
        case 3: // ??? ?? ?????? Exit
            PostQuitMessage(0); // ???????? ????? ? ???????? ?????? ????????
            break;
        case 4:
            g_WinningScore += 1;
            InvalidateRect(hWnd, NULL, TRUE);
            break;
        case 5:
            if (g_WinningScore > 1) { g_WinningScore -= 1; }
            InvalidateRect(hWnd, NULL, TRUE);
            break;
        }
        break;
    case WM_PAINT: // ?????????? ??????? ? ????????? ???????
    {
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hWnd, &ps);
        DrawMenu(hdc); // ?????????? ??????????? ???? ??? ????????? ??????
        EndPaint(hWnd, &ps);
    }
    break;
    case WM_DESTROY:
        PostQuitMessage(0); // ? ????????????: ?????? ???????, ?? ????? ?????? ????? ?? ?????????? ??????. ??-???????: ???????? ?????, ???? ???????????? ??????. ????????: ???????????????? ??? ??????????? ?????????? ??????.
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}

LRESULT CALLBACK WndProcGame(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    switch (message)
    {
    case WM_TIMER: // ??? ???????? ????? ???
        UpdateGame(); // ??????? ? ???????, ????? ?????????? ??? ?????????? ? ????????? ?'?? ?? "????????? ? ??'??????"

        // ???? ? ??????? ?? ???? ?????? ??'?????. ? ??? ?? ??? ??????????? ??????? ? ???????? ????????, ??? ?? ???? ??????? ?? ??? ? ??????? ? ???? ?? ????? ???????????? ??? ????
        // ????? ????'???? ?????? ?? windows.h

        // ?? ????? ?? ????: ???, ?? ????????? ?? ?????? ???????? ??? ?????? ?????????? ?????? ???????????? ??????. ??? ????? ???????????? ???? ?????? ? UpdateGame, ?? ? ?????? ?????
        // ??????????????? ?????????? ?'???. ??? ????? ?? ????????? ?? ??? ???????????????? ?? ?????. 

        // ??-????????: ??????, ????????? ?? ?????? ????? ??????. ?'?? ????? ???? ?????? ??????????? ????? ????.


        InvalidateRect(hWnd, NULL, TRUE); // ?????? ?????
        break;
    case WM_KEYDOWN: // ????? ?????????? ???????
        switch (wParam) // ?????-???? ??? ?????????? ???? ????
        {
        case VK_UP:
            MovePlayer(-PADDLE_SPEED); // ????? ????????? ?????????, ????????? ? ???????? ????????? ?? ???
            break;
        case VK_DOWN:
            MovePlayer(PADDLE_SPEED);
            break;
        }
        break;
    case WM_PAINT: // ????? ??????????????? ????-???? ? ?????
    {
        // ???? ?????? ???? ????? ??? ?????? ? ?????
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hWnd, &ps);
        DrawGame(hdc);
        EndPaint(hWnd, &ps);
    }
    break;
    case WM_DESTROY: // ?????????? ????????????
        PostQuitMessage(0);
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}

void UpdateGame() // ??? ??? ??????, ???????????? ????? ???, ?????? ?????????, ?????????
{
    g_BallX += g_BallDirX * BALL_SPEED;
    g_BallY += g_BallDirY * BALL_SPEED;

    if (g_BallY <= BAR_HEIGHT || g_BallY >= WINDOW_HEIGHT - 4 * WALL_WIDTH - BALL_SIZE)
    {
        g_BallDirY = -g_BallDirY;
    }

    if (g_BallX >= WINDOW_WIDTH - 2 * WALL_WIDTH - BALL_SIZE)
    {
        g_BallDirX = -g_BallDirX;
    }

    if (g_totalScore >= g_WinningScore)
    {
        ResetBall();
        MessageBox(g_hWndGame, TEXT("Congratulations! You won the game."), TEXT("Game Over"), MB_OK);
        g_totalScore = 0;

        return;
    }

    if (g_BallX <= 0)
    {
        ResetBall();
        MessageBox(g_hWndGame, TEXT("Game over. You lost."), TEXT("Game Over"), MB_OK);
        g_totalScore = 0;

        return;
    }

    if ((g_BallX <= PADDLE_WIDTH && g_BallY >= g_PlayerY && g_BallY <= g_PlayerY + PADDLE_HEIGHT))
    {
        g_BallDirX = -g_BallDirX;
        g_totalScore += 1;
    }
}


// ???????, ?? ??????????? ???
void DrawGame(HDC hdc)
{
    SetBkColor(hdc, g_BgColor);

    RECT player = { PADDLE_WIDTH, g_PlayerY, PADDLE_WIDTH + PADDLE_WIDTH, g_PlayerY + PADDLE_HEIGHT }; // RECT - ??? ?????, ?????? ????? ???????????, ??????? 4 ???????? ?? ???????:
    // ?????? ???? ????? ?, ?????? ???? ????? ?, ????? ????? ????? ?, ????? ????? ????? ?
    RECT wall1 = { WINDOW_WIDTH - 2 * WALL_WIDTH, BAR_HEIGHT, WINDOW_WIDTH - WALL_WIDTH, WINDOW_HEIGHT - 3 * WALL_WIDTH };
    RECT wall2 = { 0, WINDOW_HEIGHT - 4 * WALL_WIDTH, WINDOW_WIDTH - WALL_WIDTH, WINDOW_HEIGHT - 3 * WALL_WIDTH };
    RECT wall3 = { 0, BAR_HEIGHT - WALL_WIDTH, WINDOW_WIDTH - WALL_WIDTH, BAR_HEIGHT };
    RECT ball = { g_BallX, g_BallY, g_BallX + BALL_SIZE, g_BallY + BALL_SIZE };

    FillRect(hdc, &player, (HBRUSH)GetStockObject(BLACK_BRUSH)); // ??? ????? ??????????? ???????????, ???? ????? ????????? ????????
    FillRect(hdc, &wall1, (HBRUSH)GetStockObject(BLACK_BRUSH));
    FillRect(hdc, &wall2, (HBRUSH)GetStockObject(BLACK_BRUSH));
    FillRect(hdc, &wall3, (HBRUSH)GetStockObject(BLACK_BRUSH));
    FillRect(hdc, &ball, (HBRUSH)GetStockObject(BLACK_BRUSH));

    std::wstring scoreString = L"Score: " + std::to_wstring(g_totalScore);

    TextOut(hdc, int(WINDOW_WIDTH * 4 / 5), 30, scoreString.c_str(), scoreString.size()); // ??????? ?????? ??????, ??????? ????????? ?? ?????, ?????????? ?? ? ? ?, ?????????? ????? ? ??????? ? ??????? ????? ??????
}

// ???????, ?? ??????????? ????, ???????? ??? ?????? ????? ??? ?? ????????????? ???????
void DrawMenu(HDC hdc)
{
    SetBkColor(hdc, g_BgColor);
    // ????????? ????? ??? ???????? ??????
    HFONT hFont = CreateFont(68, 0, 0, 0, FW_BOLD, FALSE, FALSE, FALSE, ANSI_CHARSET, OUT_TT_PRECIS, CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH | FF_DONTCARE, TEXT("Arial"));
    HFONT hOldFont = (HFONT)SelectObject(hdc, hFont);

    std::wstring text = L"Tennis";
    int textLength = text.size();
    int x = WINDOW_WIDTH / 2 - 100;
    int y = WINDOW_HEIGHT / 4 - 50;
    TextOut(hdc, x, y, text.c_str(), textLength);

    SelectObject(hdc, hOldFont); // ??????????? ????? ?? ???????????
    DeleteObject(hFont); // ????????? ????????? ?????

    // ???????????? ???????????? ???????
    std::wstring scoreText = L"Winning Score: " + std::to_wstring(g_WinningScore);
    TextOut(hdc, WINDOW_WIDTH / 2 - 50, WINDOW_HEIGHT - 135, scoreText.c_str(), scoreText.length());
}

void MovePlayer(int direction) // ????? ????????? ?????? ? ?????????? ?????
{
    if (g_PlayerY + direction >= BAR_HEIGHT - 5 && g_PlayerY + direction <= WINDOW_HEIGHT - PADDLE_HEIGHT - 4 * WALL_WIDTH)
    {
        g_PlayerY += direction;
    }
}

void ResetBall() // ??? ?????????? ??? ??????? ??????, ???????? ????? ??? ? ?????????? ????? ????
{
    g_BallX = WINDOW_WIDTH / 2 - BALL_SIZE / 2;
    g_BallY = WINDOW_HEIGHT / 2 - BALL_SIZE / 2;
    g_BallDirX = abs(g_BallDirX);
    KillTimer(g_hWndGame, 1);
    ShowWindow(g_hWndMenu, SW_SHOWNORMAL);
    ShowWindow(g_hWndGame, SW_HIDE);
    SaveResultsToFile();
}

void SaveResultsToFile() // ?????????? ??????????? ? ???? results.txt
{
    std::ofstream file("results.txt", std::ios::app);  // ??????????? ???? ??? ??????????
    if (file.is_open())
    {
        file << "Score: " << g_totalScore << std::endl;
        file.close();
    }
}